#!/usr/bin/env bash

# Exit immediately if a command exits with a non-zero status
set -o errexit
# Exit if a pipeline returns a non-zero status
set -o pipefail
# Exit if any variable is unset
set -o nounset

# Function to check PostgreSQL readiness
postgres_ready() {
python << END
import sys
import psycopg2
import urllib.parse as urlparse
import os

url = urlparse.urlparse(os.environ['DATABASE_URL'])
dbname = url.path[1:]
user = url.username
password = url.password
host = url.hostname
port = url.port

try:
    # Attempt to connect to PostgreSQL
    psycopg2.connect(
        dbname=dbname,
        user=user,
        password=password,
        host=host,
        port=port
    )
except psycopg2.OperationalError:
    # Exit with -1 if connection fails
    sys.exit(-1)
# Exit with 0 if connection is successful
sys.exit(0)
END
}

# Loop until PostgreSQL is ready
until postgres_ready; do
  # Print waiting message to stderr
  >&2 echo 'Waiting for PostgreSQL to become available...'
  # Wait for 1 second before retrying
  sleep 1
done

# Print PostgreSQL is available message to stderr
>&2 echo 'PostgreSQL is available'

# Execute the command(s) passed as arguments to the script
exec "$@"
